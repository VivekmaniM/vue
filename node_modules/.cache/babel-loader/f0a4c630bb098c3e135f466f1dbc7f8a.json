{"ast":null,"code":"// Composables\nimport { createDefaults, DefaultsSymbol } from \"./composables/defaults.mjs\";\nimport { createDisplay, DisplaySymbol } from \"./composables/display.mjs\";\nimport { createIcons, IconSymbol } from \"./composables/icons.mjs\";\nimport { createLocale, LocaleAdapterSymbol } from \"./composables/locale.mjs\";\nimport { createTheme, ThemeSymbol } from \"./composables/theme.mjs\";\nimport { RtlSymbol } from \"./composables/rtl.mjs\"; // Utilities\n\nimport { defineComponent, getUid, IN_BROWSER, mergeDeep } from \"./util/index.mjs\";\nimport { reactive } from 'vue'; // Types\n\nexport * from \"./composables/index.mjs\";\nexport const createVuetify = function () {\n  let vuetify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const install = app => {\n    const {\n      blueprint,\n      ...rest\n    } = vuetify;\n    const options = mergeDeep(blueprint, rest);\n    const {\n      aliases = {},\n      components = {},\n      directives = {}\n    } = options;\n\n    for (const key in directives) {\n      app.directive(key, directives[key]);\n    }\n\n    for (const key in components) {\n      app.component(key, components[key]);\n    }\n\n    for (const key in aliases) {\n      app.component(key, defineComponent({ ...aliases[key],\n        name: key\n      }));\n    }\n\n    function provideApp(isHydrate) {\n      app.provide(DefaultsSymbol, createDefaults(options.defaults));\n      app.provide(DisplaySymbol, createDisplay(options.display, isHydrate));\n      app.provide(ThemeSymbol, createTheme(app, options.theme));\n      app.provide(IconSymbol, createIcons(options.icons));\n      app.provide(LocaleAdapterSymbol, createLocale(app, options.locale));\n    }\n\n    if (!IN_BROWSER) {\n      provideApp();\n    }\n\n    getUid.reset();\n    const mount = app.mount;\n\n    app.mount = (rootContainer, isHydrate, isSVG) => {\n      provideApp(isHydrate);\n      const ret = mount(rootContainer, isHydrate, isSVG);\n      app.mount = mount;\n      return ret;\n    }; // Vue's inject() can only be used in setup\n\n\n    function inject(key) {\n      var _vm$parent$provides, _vm$parent, _vm$vnode$appContext;\n\n      const vm = this.$;\n      const provides = (_vm$parent$provides = (_vm$parent = vm.parent) == null ? void 0 : _vm$parent.provides) != null ? _vm$parent$provides : (_vm$vnode$appContext = vm.vnode.appContext) == null ? void 0 : _vm$vnode$appContext.provides;\n\n      if (provides && key in provides) {\n        return provides[key];\n      }\n    }\n\n    app.mixin({\n      computed: {\n        $vuetify() {\n          return reactive({\n            defaults: inject.call(this, DefaultsSymbol),\n            display: inject.call(this, DisplaySymbol),\n            theme: inject.call(this, ThemeSymbol),\n            icons: inject.call(this, IconSymbol),\n            locale: inject.call(this, LocaleAdapterSymbol),\n            rtl: inject.call(this, RtlSymbol)\n          });\n        }\n\n      }\n    });\n  };\n\n  return {\n    install\n  };\n};","map":{"version":3,"mappings":"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","names":["createDefaults","DefaultsSymbol","createDisplay","DisplaySymbol","createIcons","IconSymbol","createLocale","LocaleAdapterSymbol","createTheme","ThemeSymbol","RtlSymbol","defineComponent","getUid","IN_BROWSER","mergeDeep","reactive","createVuetify","vuetify","install","app","blueprint","rest","options","aliases","components","directives","key","directive","component","name","provideApp","isHydrate","provide","defaults","display","theme","icons","locale","reset","mount","rootContainer","isSVG","ret","inject","vm","$","provides","parent","_vm$parent","vnode","appContext","_vm$vnode$appContext","mixin","computed","$vuetify","call","rtl"],"sources":["../src/framework.ts"],"sourcesContent":["// Composables\nimport { createDefaults, DefaultsSymbol } from '@/composables/defaults'\nimport { createDisplay, DisplaySymbol } from '@/composables/display'\nimport { createIcons, IconSymbol } from '@/composables/icons'\nimport { createLocale, LocaleAdapterSymbol } from '@/composables/locale'\nimport { createTheme, ThemeSymbol } from '@/composables/theme'\nimport { RtlSymbol } from '@/composables/rtl'\n\n// Utilities\nimport { defineComponent, getUid, IN_BROWSER, mergeDeep } from '@/util'\nimport { reactive } from 'vue'\n\n// Types\nimport type { App, ComponentPublicInstance, InjectionKey } from 'vue'\nimport type { DefaultsOptions } from '@/composables/defaults'\nimport type { DisplayOptions } from '@/composables/display'\nimport type { IconOptions } from '@/composables/icons'\nimport type { LocaleAdapter, LocaleOptions } from '@/composables/locale'\nimport type { RtlOptions } from '@/composables/rtl'\nimport type { ThemeOptions } from '@/composables/theme'\n\nexport * from './composables'\n\nexport interface VuetifyOptions {\n  aliases?: Record<string, any>\n  blueprint?: Blueprint\n  components?: Record<string, any>\n  directives?: Record<string, any>\n  defaults?: DefaultsOptions\n  display?: DisplayOptions\n  theme?: ThemeOptions\n  icons?: IconOptions\n  locale?: (LocaleOptions & RtlOptions) | (LocaleAdapter & RtlOptions)\n}\n\nexport interface Blueprint extends Omit<VuetifyOptions, 'blueprint'> {}\n\nexport const createVuetify = (vuetify: VuetifyOptions = {}) => {\n  const install = (app: App) => {\n    const { blueprint, ...rest } = vuetify\n    const options = mergeDeep(blueprint, rest)\n    const {\n      aliases = {},\n      components = {},\n      directives = {},\n    } = options\n\n    for (const key in directives) {\n      app.directive(key, directives[key])\n    }\n\n    for (const key in components) {\n      app.component(key, components[key])\n    }\n\n    for (const key in aliases) {\n      app.component(key, defineComponent({\n        ...aliases[key],\n        name: key,\n      }))\n    }\n\n    function provideApp (isHydrate?: boolean) {\n      app.provide(DefaultsSymbol, createDefaults(options.defaults))\n      app.provide(DisplaySymbol, createDisplay(options.display, isHydrate))\n      app.provide(ThemeSymbol, createTheme(app, options.theme))\n      app.provide(IconSymbol, createIcons(options.icons))\n      app.provide(LocaleAdapterSymbol, createLocale(app, options.locale))\n    }\n\n    if (!IN_BROWSER) {\n      provideApp()\n    }\n\n    getUid.reset()\n\n    const mount = app.mount\n    app.mount = (rootContainer: any, isHydrate?: boolean, isSVG?: boolean) => {\n      provideApp(isHydrate)\n      const ret = mount(rootContainer, isHydrate, isSVG)\n      app.mount = mount\n      return ret\n    }\n\n    // Vue's inject() can only be used in setup\n    function inject (this: ComponentPublicInstance, key: InjectionKey<any> | string) {\n      const vm = this.$\n\n      const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides\n\n      if (provides && (key as any) in provides) {\n        return provides[(key as string)]\n      }\n    }\n\n    app.mixin({\n      computed: {\n        $vuetify () {\n          return reactive({\n            defaults: inject.call(this, DefaultsSymbol),\n            display: inject.call(this, DisplaySymbol),\n            theme: inject.call(this, ThemeSymbol),\n            icons: inject.call(this, IconSymbol),\n            locale: inject.call(this, LocaleAdapterSymbol),\n            rtl: inject.call(this, RtlSymbol),\n          })\n        },\n      },\n    })\n  }\n\n  return { install }\n}\n"]},"metadata":{},"sourceType":"module"}