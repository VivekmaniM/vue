{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VListItem.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VListItemSubtitle } from \"./VListItemSubtitle.mjs\";\nimport { VListItemTitle } from \"./VListItemTitle.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useList } from \"./list.mjs\";\nimport { useNestedItem } from \"../../composables/nested/nested.mjs\"; // Utilities\n\nimport { computed, watch } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VListItem = genericComponent()({\n  name: 'VListItem',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined\n    },\n    activeClass: String,\n    activeColor: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    lines: String,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: [String, Number, Boolean],\n    title: [String, Number, Boolean],\n    value: null,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const link = useLink(props, attrs);\n    const id = computed(() => {\n      var _props$value;\n\n      return (_props$value = props.value) != null ? _props$value : link.href.value;\n    });\n    const {\n      select,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent\n    } = useNestedItem(id, false);\n    const list = useList();\n    const isActive = computed(() => {\n      var _link$isExactActive;\n\n      return props.active !== false && (props.active || ((_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value) || isSelected.value);\n    });\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value || props.value != null && !!list));\n    const roundedProps = computed(() => props.rounded || props.nav);\n    const variantProps = computed(() => {\n      var _props$activeColor;\n\n      return {\n        color: isActive.value ? (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color : props.color,\n        variant: props.variant\n      };\n    });\n    watch(() => {\n      var _link$isExactActive2;\n\n      return (_link$isExactActive2 = link.isExactActive) == null ? void 0 : _link$isExactActive2.value;\n    }, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    }, {\n      immediate: true\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(roundedProps);\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined);\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value\n    }));\n    useRender(() => {\n      var _slots$prepend, _slots$title, _slots$title2, _slots$subtitle, _slots$subtitle2, _slots$default, _slots$append;\n\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasColor = !list || isSelected.value || isActive.value;\n      const hasTitle = slots.title || props.title;\n      const hasSubtitle = slots.subtitle || props.subtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      list == null ? void 0 : list.updateHasPrepend(hasPrepend);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-list-item', {\n          'v-list-item--active': isActive.value,\n          'v-list-item--disabled': props.disabled,\n          'v-list-item--link': isClickable.value,\n          'v-list-item--nav': props.nav,\n          'v-list-item--prepend': !hasPrepend && (list == null ? void 0 : list.hasPrepend.value),\n          [`${props.activeClass}`]: isActive.value\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value],\n        \"href\": link.href.value,\n        \"tabindex\": isClickable.value ? 0 : undefined,\n        \"onClick\": isClickable.value && (e => {\n          var _link$navigate;\n\n          if (isGroupActivator) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          props.value != null && select(!isSelected.value, e);\n        })\n      }, {\n        default: () => [genOverlays(isClickable.value || isActive.value, 'v-list-item'), hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VAvatar: {\n              density: props.density,\n              image: props.prependAvatar\n            },\n            VIcon: {\n              density: props.density,\n              icon: props.prependIcon\n            },\n            VListItemAction: {\n              start: true\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-list-item__prepend\"\n          }, [props.prependAvatar && _createVNode(VAvatar, {\n            \"key\": \"prepend-avatar\"\n          }, null), props.prependIcon && _createVNode(VIcon, {\n            \"key\": \"prepend-icon\"\n          }, null), (_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots, slotProps.value)])]\n        }), _createVNode(\"div\", {\n          \"class\": \"v-list-item__content\"\n        }, [hasTitle && _createVNode(VListItemTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [(_slots$title = (_slots$title2 = slots.title) == null ? void 0 : _slots$title2.call(slots, {\n            title: props.title\n          })) != null ? _slots$title : props.title]\n        }), hasSubtitle && _createVNode(VListItemSubtitle, {\n          \"key\": \"subtitle\"\n        }, {\n          default: () => [(_slots$subtitle = (_slots$subtitle2 = slots.subtitle) == null ? void 0 : _slots$subtitle2.call(slots, {\n            subtitle: props.subtitle\n          })) != null ? _slots$subtitle : props.subtitle]\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, slotProps.value)]), hasAppend && _createVNode(VDefaultsProvider, {\n          \"key\": \"append\",\n          \"defaults\": {\n            VAvatar: {\n              density: props.density,\n              image: props.appendAvatar\n            },\n            VIcon: {\n              density: props.density,\n              icon: props.appendIcon\n            },\n            VListItemAction: {\n              end: true\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-list-item__append\"\n          }, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots, slotProps.value), props.appendIcon && _createVNode(VIcon, {\n            \"key\": \"append-icon\"\n          }, null), props.appendAvatar && _createVNode(VAvatar, {\n            \"key\": \"append-avatar\"\n          }, null)])]\n        })]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value]]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VDefaultsProvider","VIcon","VListItemSubtitle","VListItemTitle","Ripple","genOverlays","makeVariantProps","useVariant","IconValue","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","useList","useNestedItem","computed","watch","genericComponent","useRender","VListItem","name","directives","props","active","type","Boolean","default","undefined","activeClass","String","activeColor","appendAvatar","appendIcon","disabled","lines","link","nav","prependAvatar","prependIcon","subtitle","Number","title","value","variant","setup","attrs","slots","_ref","id","href","select","isSelected","isIndeterminate","isGroupActivator","root","parent","list","isActive","isExactActive","_link$isExactActive","isLink","isClickable","roundedProps","rounded","variantProps","color","_link$isExactActive2","val","open","immediate","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","lineClasses","slotProps","Tag","tag","hasColor","hasTitle","hasSubtitle","hasAppend","append","hasPrepend","prepend","updateHasPrepend","e","navigate","density","image","icon","VListItemAction","start","_slots$prepend","_slots$title2","_slots$subtitle2","_slots$default","end","_slots$append"],"sources":["../../../src/components/VList/VListItem.tsx"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useList } from './list'\nimport { useNestedItem } from '@/composables/nested/nested'\n\n// Utilities\nimport { computed, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined,\n    },\n    activeClass: String,\n    activeColor: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    lines: String as PropType<'one' | 'two' | 'three'>,\n    link: {\n      type: Boolean,\n      default: undefined,\n    },\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: [String, Number, Boolean],\n    title: [String, Number, Boolean],\n    value: null,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { select, isSelected, isIndeterminate, isGroupActivator, root, parent } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() =>\n      props.active !== false &&\n      (props.active || link.isExactActive?.value || isSelected.value)\n    )\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value || (props.value != null && !!list))\n    )\n\n    const roundedProps = computed(() => props.rounded || props.nav)\n    const variantProps = computed(() => ({\n      color: isActive.value ? props.activeColor ?? props.color : props.color,\n      variant: props.variant,\n    }))\n\n    watch(() => link.isExactActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    }, { immediate: true })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(roundedProps)\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    }))\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasColor = !list || isSelected.value || isActive.value\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable.value,\n              'v-list-item--nav': props.nav,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ isClickable.value && ((e: MouseEvent) => {\n            if (isGroupActivator) return\n\n            link.navigate?.(e)\n            props.value != null && select(!isSelected.value, e)\n          })}\n          v-ripple={ isClickable.value }\n        >\n          { genOverlays(isClickable.value || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VAvatar: {\n                  density: props.density,\n                  image: props.prependAvatar,\n                },\n                VIcon: {\n                  density: props.density,\n                  icon: props.prependIcon,\n                },\n                VListItemAction: {\n                  start: true,\n                },\n              }}\n            >\n              <div class=\"v-list-item__prepend\">\n                { props.prependAvatar && (\n                  <VAvatar key=\"prepend-avatar\" />\n                ) }\n\n                { props.prependIcon && (\n                  <VIcon key=\"prepend-icon\" />\n                ) }\n\n                { slots.prepend?.(slotProps.value) }\n              </div>\n            </VDefaultsProvider>\n          ) }\n\n          <div class=\"v-list-item__content\">\n            { hasTitle && (\n              <VListItemTitle key=\"title\">\n                { slots.title?.({ title: props.title }) ?? props.title}\n              </VListItemTitle>\n            ) }\n\n            { hasSubtitle && (\n              <VListItemSubtitle key=\"subtitle\">\n                { slots.subtitle?.({ subtitle: props.subtitle }) ?? props.subtitle }\n              </VListItemSubtitle>\n            ) }\n\n            { slots.default?.(slotProps.value) }\n          </div>\n\n          { hasAppend && (\n            <VDefaultsProvider\n              key=\"append\"\n              defaults={{\n                VAvatar: {\n                  density: props.density,\n                  image: props.appendAvatar,\n                },\n                VIcon: {\n                  density: props.density,\n                  icon: props.appendIcon,\n                },\n                VListItemAction: {\n                  end: true,\n                },\n              }}\n            >\n              <div class=\"v-list-item__append\">\n                { slots.append?.(slotProps.value) }\n\n                { props.appendIcon && (\n                  <VIcon key=\"append-icon\" />\n                ) }\n\n                { props.appendAvatar && (\n                  <VAvatar key=\"append-avatar\" />\n                ) }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"]},"metadata":{},"sourceType":"module"}