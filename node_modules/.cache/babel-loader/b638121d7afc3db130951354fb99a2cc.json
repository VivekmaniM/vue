{"ast":null,"code":"import { createTextVNode as _createTextVNode, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VRating.css\"; // Components\n\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\n\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\";\nimport { makeSizeProps } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { createRange, genericComponent, getUid, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VRating = genericComponent()({\n  name: 'VRating',\n  props: {\n    name: String,\n    itemAriaLabel: {\n      type: String,\n      default: '$vuetify.rating.ariaLabel.item'\n    },\n    activeColor: String,\n    color: String,\n    clearable: Boolean,\n    disabled: Boolean,\n    emptyIcon: {\n      type: IconValue,\n      default: '$ratingEmpty'\n    },\n    fullIcon: {\n      type: IconValue,\n      default: '$ratingFull'\n    },\n    halfIncrements: Boolean,\n    hover: Boolean,\n    length: {\n      type: [Number, String],\n      default: 5\n    },\n    readonly: Boolean,\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    itemLabels: Array,\n    itemLabelPosition: {\n      type: String,\n      default: 'top',\n      validator: v => ['top', 'bottom'].includes(v)\n    },\n    ripple: Boolean,\n    ...makeDensityProps(),\n    ...makeSizeProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const rating = useProxiedModel(props, 'modelValue');\n    const range = computed(() => createRange(Number(props.length), 1));\n    const increments = computed(() => range.value.flatMap(v => props.halfIncrements ? [v - 0.5, v] : [v]));\n    const hoverIndex = ref(-1);\n    const focusIndex = ref(-1);\n    const firstRef = ref();\n    let isClicking = false;\n    const itemState = computed(() => increments.value.map(value => {\n      var _props$activeColor;\n\n      const isHovering = props.hover && hoverIndex.value > -1;\n      const isFilled = rating.value >= value;\n      const isHovered = hoverIndex.value >= value;\n      const isFullIcon = isHovering ? isHovered : isFilled;\n      const icon = isFullIcon ? props.fullIcon : props.emptyIcon;\n      const activeColor = (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color;\n      const color = isFilled || isHovered ? activeColor : props.color;\n      return {\n        isFilled,\n        isHovered,\n        icon,\n        color\n      };\n    }));\n    const eventState = computed(() => [0, ...increments.value].map(value => {\n      function onMouseenter() {\n        hoverIndex.value = value;\n      }\n\n      function onMouseleave() {\n        hoverIndex.value = -1;\n      }\n\n      function onFocus() {\n        if (value === 0 && rating.value === 0) {\n          var _firstRef$value;\n\n          (_firstRef$value = firstRef.value) == null ? void 0 : _firstRef$value.focus();\n        } else {\n          focusIndex.value = value;\n        }\n      }\n\n      function onBlur() {\n        if (!isClicking) focusIndex.value = -1;\n      }\n\n      function onClick() {\n        if (props.disabled || props.readonly) return;\n        rating.value = rating.value === value && props.clearable ? 0 : value;\n      }\n\n      return {\n        onMouseenter: props.hover ? onMouseenter : undefined,\n        onMouseleave: props.hover ? onMouseleave : undefined,\n        onFocus,\n        onBlur,\n        onClick\n      };\n    }));\n\n    function onMousedown() {\n      isClicking = true;\n    }\n\n    function onMouseup() {\n      isClicking = false;\n    }\n\n    const name = computed(() => {\n      var _props$name;\n\n      return (_props$name = props.name) != null ? _props$name : `v-rating-${getUid()}`;\n    });\n\n    function VRatingItem(_ref2) {\n      var _itemState$value$inde, _itemState$value$inde2;\n\n      let {\n        value,\n        index,\n        showStar = true\n      } = _ref2;\n      const {\n        onMouseenter,\n        onMouseleave,\n        onFocus,\n        onBlur,\n        onClick\n      } = eventState.value[index + 1];\n      const id = `${name.value}-${String(value).replace('.', '-')}`;\n      const btnProps = {\n        color: (_itemState$value$inde = itemState.value[index]) == null ? void 0 : _itemState$value$inde.color,\n        density: props.density,\n        disabled: props.disabled,\n        icon: (_itemState$value$inde2 = itemState.value[index]) == null ? void 0 : _itemState$value$inde2.icon,\n        ripple: props.ripple,\n        size: props.size,\n        tag: 'span',\n        variant: 'plain'\n      };\n      return _createVNode(_Fragment, null, [_createVNode(\"label\", {\n        \"for\": id,\n        \"class\": {\n          'v-rating__item--half': props.halfIncrements && value % 1 > 0,\n          'v-rating__item--full': props.halfIncrements && value % 1 === 0\n        },\n        \"onMousedown\": onMousedown,\n        \"onMouseup\": onMouseup,\n        \"onMouseenter\": onMouseenter,\n        \"onMouseleave\": onMouseleave\n      }, [_createVNode(\"span\", {\n        \"class\": \"v-rating__hidden\"\n      }, [t(props.itemAriaLabel, value, props.length)]), !showStar ? undefined : slots.item ? slots.item({ ...itemState.value[index],\n        props: btnProps,\n        value,\n        index\n      }) : _createVNode(VBtn, btnProps, null)]), _createVNode(\"input\", {\n        \"class\": \"v-rating__hidden\",\n        \"name\": name.value,\n        \"id\": id,\n        \"type\": \"radio\",\n        \"value\": value,\n        \"checked\": rating.value === value,\n        \"onClick\": onClick,\n        \"onFocus\": onFocus,\n        \"onBlur\": onBlur,\n        \"ref\": index === 0 ? firstRef : undefined,\n        \"readonly\": props.readonly,\n        \"disabled\": props.disabled\n      }, null)]);\n    }\n\n    function createLabel(labelProps) {\n      if (slots['item-label']) return slots['item-label'](labelProps);\n      if (labelProps.label) return _createVNode(\"span\", null, [labelProps.label]);\n      return _createVNode(\"span\", null, [_createTextVNode(\"\\xA0\")]);\n    }\n\n    useRender(() => {\n      var _props$itemLabels;\n\n      const hasLabels = !!((_props$itemLabels = props.itemLabels) != null && _props$itemLabels.length) || slots['item-label'];\n      return _createVNode(props.tag, {\n        \"class\": ['v-rating', {\n          'v-rating--hover': props.hover,\n          'v-rating--readonly': props.readonly\n        }, themeClasses.value]\n      }, {\n        default: () => [_createVNode(VRatingItem, {\n          \"value\": 0,\n          \"index\": -1,\n          \"showStar\": false\n        }, null), range.value.map((value, i) => {\n          var _props$itemLabels2, _props$itemLabels3;\n\n          return _createVNode(\"div\", {\n            \"class\": \"v-rating__wrapper\"\n          }, [hasLabels && props.itemLabelPosition === 'top' ? createLabel({\n            value,\n            index: i,\n            label: (_props$itemLabels2 = props.itemLabels) == null ? void 0 : _props$itemLabels2[i]\n          }) : undefined, _createVNode(\"div\", {\n            \"class\": ['v-rating__item', {\n              'v-rating__item--focused': Math.ceil(focusIndex.value) === value\n            }]\n          }, [props.halfIncrements ? _createVNode(_Fragment, null, [_createVNode(VRatingItem, {\n            \"value\": value - 0.5,\n            \"index\": i * 2\n          }, null), _createVNode(VRatingItem, {\n            \"value\": value,\n            \"index\": i * 2 + 1\n          }, null)]) : _createVNode(VRatingItem, {\n            \"value\": value,\n            \"index\": i\n          }, null)]), hasLabels && props.itemLabelPosition === 'bottom' ? createLabel({\n            value,\n            index: i,\n            label: (_props$itemLabels3 = props.itemLabels) == null ? void 0 : _props$itemLabels3[i]\n          }) : undefined]);\n        })]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VBtn","IconValue","makeDensityProps","makeSizeProps","makeTagProps","makeThemeProps","provideTheme","useLocale","useProxiedModel","computed","ref","createRange","genericComponent","getUid","useRender","VRating","name","props","String","itemAriaLabel","type","default","activeColor","color","clearable","Boolean","disabled","emptyIcon","fullIcon","halfIncrements","hover","length","Number","readonly","modelValue","itemLabels","Array","itemLabelPosition","validator","v","includes","ripple","emits","value","setup","slots","_ref","t","themeClasses","rating","range","increments","flatMap","hoverIndex","focusIndex","firstRef","isClicking","itemState","map","isHovering","isFilled","isHovered","isFullIcon","icon","eventState","onMouseenter","onMouseleave","onFocus","focus","onBlur","onClick","undefined","onMousedown","onMouseup","VRatingItem","index","showStar","_ref2","id","replace","btnProps","_itemState$value$inde","density","_itemState$value$inde2","size","tag","variant","item","createLabel","labelProps","label","hasLabels","_props$itemLabels","i","_props$itemLabels2","Math","ceil","_props$itemLabels3"],"sources":["../../../src/components/VRating/VRating.tsx"],"sourcesContent":["// Styles\nimport './VRating.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps } from '@/composables/density'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { createRange, genericComponent, getUid, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { Prop } from 'vue'\nimport type { Variant } from '@/composables/variant'\n\ntype VRatingItemSlot = {\n  value: number\n  index: number\n  isFilled: boolean\n  isHovered: boolean\n  icon: IconValue\n  color?: string\n  props: Record<string, unknown>\n}\n\ntype VRatingItemLabelSlot = {\n  value: number\n  index: number\n  label?: string\n}\n\nexport const VRating = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    item: [VRatingItemSlot]\n    'item-label': [VRatingItemLabelSlot]\n  }>\n}>()({\n  name: 'VRating',\n\n  props: {\n    name: String,\n    itemAriaLabel: {\n      type: String,\n      default: '$vuetify.rating.ariaLabel.item',\n    },\n    activeColor: String,\n    color: String,\n    clearable: Boolean,\n    disabled: Boolean,\n    emptyIcon: {\n      type: IconValue,\n      default: '$ratingEmpty',\n    },\n    fullIcon: {\n      type: IconValue,\n      default: '$ratingFull',\n    },\n    halfIncrements: Boolean,\n    hover: Boolean,\n    length: {\n      type: [Number, String],\n      default: 5,\n    },\n    readonly: Boolean,\n    modelValue: {\n      type: Number,\n      default: 0,\n    },\n    itemLabels: Array as Prop<string[]>,\n    itemLabelPosition: {\n      type: String,\n      default: 'top',\n      validator: (v: any) => ['top', 'bottom'].includes(v),\n    },\n    ripple: Boolean,\n\n    ...makeDensityProps(),\n    ...makeSizeProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const { themeClasses } = provideTheme(props)\n    const rating = useProxiedModel(props, 'modelValue')\n\n    const range = computed(() => createRange(Number(props.length), 1))\n    const increments = computed(() => range.value.flatMap(v => props.halfIncrements ? [v - 0.5, v] : [v]))\n    const hoverIndex = ref(-1)\n    const focusIndex = ref(-1)\n    const firstRef = ref<HTMLElement>()\n    let isClicking = false\n\n    const itemState = computed(() => increments.value.map(value => {\n      const isHovering = props.hover && hoverIndex.value > -1\n      const isFilled = rating.value >= value\n      const isHovered = hoverIndex.value >= value\n      const isFullIcon = isHovering ? isHovered : isFilled\n      const icon = isFullIcon ? props.fullIcon : props.emptyIcon\n      const activeColor = props.activeColor ?? props.color\n      const color = (isFilled || isHovered) ? activeColor : props.color\n\n      return { isFilled, isHovered, icon, color }\n    }))\n\n    const eventState = computed(() => [0, ...increments.value].map(value => {\n      function onMouseenter () {\n        hoverIndex.value = value\n      }\n\n      function onMouseleave () {\n        hoverIndex.value = -1\n      }\n\n      function onFocus () {\n        if (value === 0 && rating.value === 0) {\n          firstRef.value?.focus()\n        } else {\n          focusIndex.value = value\n        }\n      }\n\n      function onBlur () {\n        if (!isClicking) focusIndex.value = -1\n      }\n\n      function onClick () {\n        if (props.disabled || props.readonly) return\n        rating.value = rating.value === value && props.clearable ? 0 : value\n      }\n\n      return {\n        onMouseenter: props.hover ? onMouseenter : undefined,\n        onMouseleave: props.hover ? onMouseleave : undefined,\n        onFocus,\n        onBlur,\n        onClick,\n      }\n    }))\n\n    function onMousedown () {\n      isClicking = true\n    }\n\n    function onMouseup () {\n      isClicking = false\n    }\n\n    const name = computed(() => props.name ?? `v-rating-${getUid()}`)\n\n    function VRatingItem ({ value, index, showStar = true }: { value: number, index: number, showStar?: boolean }) {\n      const { onMouseenter, onMouseleave, onFocus, onBlur, onClick } = eventState.value[index + 1]\n      const id = `${name.value}-${String(value).replace('.', '-')}`\n      const btnProps = {\n        color: itemState.value[index]?.color,\n        density: props.density,\n        disabled: props.disabled,\n        icon: itemState.value[index]?.icon,\n        ripple: props.ripple,\n        size: props.size,\n        tag: 'span',\n        variant: 'plain' as Variant,\n      }\n\n      return (\n        <>\n          <label\n            for={ id }\n            class={{\n              'v-rating__item--half': props.halfIncrements && value % 1 > 0,\n              'v-rating__item--full': props.halfIncrements && value % 1 === 0,\n            }}\n            onMousedown={ onMousedown }\n            onMouseup={ onMouseup }\n            onMouseenter={ onMouseenter }\n            onMouseleave={ onMouseleave }\n          >\n            <span class=\"v-rating__hidden\">{ t(props.itemAriaLabel, value, props.length) }</span>\n            {\n              !showStar ? undefined\n              : slots.item ? slots.item({\n                ...itemState.value[index],\n                props: btnProps,\n                value,\n                index,\n              })\n              : (\n                <VBtn { ...btnProps } />\n              )\n            }\n          </label>\n\n          <input\n            class=\"v-rating__hidden\"\n            name={ name.value }\n            id={ id }\n            type=\"radio\"\n            value={ value }\n            checked={ rating.value === value }\n            onClick={ onClick }\n            onFocus={ onFocus }\n            onBlur={ onBlur }\n            ref={ index === 0 ? firstRef : undefined }\n            readonly={ props.readonly }\n            disabled={ props.disabled }\n          />\n        </>\n      )\n    }\n\n    function createLabel (labelProps: { value: number, index: number, label?: string }) {\n      if (slots['item-label']) return slots['item-label'](labelProps)\n\n      if (labelProps.label) return <span>{ labelProps.label }</span>\n\n      return <span>&nbsp;</span>\n    }\n\n    useRender(() => {\n      const hasLabels = !!props.itemLabels?.length || slots['item-label']\n\n      return (\n        <props.tag\n          class={[\n            'v-rating',\n            {\n              'v-rating--hover': props.hover,\n              'v-rating--readonly': props.readonly,\n            },\n            themeClasses.value,\n          ]}\n        >\n          <VRatingItem value={ 0 } index={ -1 } showStar={ false } />\n\n          { range.value.map((value, i) => (\n            <div class=\"v-rating__wrapper\">\n              {\n                hasLabels && props.itemLabelPosition === 'top'\n                  ? createLabel({ value, index: i, label: props.itemLabels?.[i] })\n                  : undefined\n              }\n              <div\n                class={[\n                  'v-rating__item',\n                  {\n                    'v-rating__item--focused': Math.ceil(focusIndex.value) === value,\n                  },\n                ]}\n              >\n                { props.halfIncrements ? (\n                  <>\n                    <VRatingItem value={ value - 0.5 } index={ i * 2 } />\n                    <VRatingItem value={ value } index={ (i * 2) + 1 } />\n                  </>\n                ) : (\n                  <VRatingItem value={ value } index={ i } />\n                ) }\n              </div>\n              {\n                hasLabels && props.itemLabelPosition === 'bottom'\n                  ? createLabel({ value, index: i, label: props.itemLabels?.[i] })\n                  : undefined\n              }\n            </div>\n          )) }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRating = InstanceType<typeof VRating>\n"]},"metadata":{},"sourceType":"module"}