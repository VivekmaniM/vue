{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VAlert.css\"; // Components\n\nimport { VAlertTitle } from \"./VAlertTitle.mjs\";\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { defineComponent } from \"../../util/index.mjs\"; // Types\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'];\nexport const VAlert = defineComponent({\n  name: 'VAlert',\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: val => {\n        return typeof val === 'boolean' || ['top', 'end', 'bottom', 'start'].includes(val);\n      }\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    icon: {\n      type: [Boolean, String, Function, Object],\n      default: null\n    },\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String,\n      validator: val => allowedTypes.includes(val)\n    },\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'flat'\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const icon = computed(() => {\n      var _props$icon;\n\n      if (props.icon === false) return undefined;\n      if (!props.type) return props.icon;\n      return (_props$icon = props.icon) != null ? _props$icon : `$${props.type}`;\n    });\n    const variantProps = computed(() => {\n      var _props$color;\n\n      return {\n        color: (_props$color = props.color) != null ? _props$color : props.type,\n        variant: props.variant\n      };\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'borderColor'));\n    const {\n      t\n    } = useLocale();\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n\n      onClick(e) {\n        isActive.value = false;\n      }\n\n    }));\n    return () => {\n      var _slots$default, _slots$close, _slots$close2;\n\n      const hasPrepend = !!(slots.prepend || icon.value);\n      const hasTitle = !!(slots.title || props.title);\n      const hasText = !!(props.text || slots.text);\n      const hasClose = !!(slots.close || props.closable);\n      return isActive.value && _createVNode(props.tag, {\n        \"class\": ['v-alert', props.border && {\n          'v-alert--border': !!props.border,\n          [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true\n        }, {\n          'v-alert--prominent': props.prominent\n        }, themeClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value],\n        \"role\": \"alert\"\n      }, {\n        default: () => [genOverlays(false, 'v-alert'), props.border && _createVNode(\"div\", {\n          \"key\": \"border\",\n          \"class\": ['v-alert__border', textColorClasses.value],\n          \"style\": textColorStyles.value\n        }, null), hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VIcon: {\n              density: props.density,\n              icon: icon.value,\n              size: props.prominent ? 44 : 28\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-alert__prepend\"\n          }, [slots.prepend ? slots.prepend() : icon.value && _createVNode(VIcon, null, null)])]\n        }), _createVNode(\"div\", {\n          \"class\": \"v-alert__content\"\n        }, [hasTitle && _createVNode(VAlertTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title ? slots.title() : props.title]\n        }), hasText && (slots.text ? slots.text() : props.text), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)]), slots.append && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-alert__append\"\n        }, [slots.append()]), hasClose && _createVNode(VDefaultsProvider, {\n          \"key\": \"close\",\n          \"defaults\": {\n            VBtn: {\n              icon: props.closeIcon,\n              size: 'x-small',\n              variant: 'text'\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-alert__close\"\n          }, [(_slots$close = (_slots$close2 = slots.close) == null ? void 0 : _slots$close2.call(slots, {\n            props: closeProps.value\n          })) != null ? _slots$close : _createVNode(VBtn, closeProps.value, null)])]\n        })]\n      });\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAlertTitle","VBtn","VDefaultsProvider","VIcon","genOverlays","makeVariantProps","useVariant","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useLocale","useProxiedModel","useTextColor","IconValue","computed","toRef","defineComponent","allowedTypes","VAlert","name","props","border","type","Boolean","String","validator","val","includes","borderColor","closable","closeIcon","default","closeLabel","icon","Function","Object","modelValue","prominent","title","text","variant","emits","value","setup","slots","_ref","isActive","undefined","variantProps","color","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","locationStyles","positionClasses","roundedClasses","textColorClasses","textColorStyles","t","closeProps","onClick","e","hasPrepend","prepend","hasTitle","hasText","hasClose","close","density","size","_slots$default","append","_slots$close2"],"sources":["../../../src/components/VAlert/VAlert.tsx"],"sourcesContent":["// Styles\nimport './VAlert.sass'\n\n// Components\nimport { VAlertTitle } from './VAlertTitle'\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'] as const\n\ntype ContextualType = typeof allowedTypes[number]\n\nexport const VAlert = defineComponent({\n  name: 'VAlert',\n\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: (val: boolean | string) => {\n        return typeof val === 'boolean' || [\n          'top',\n          'end',\n          'bottom',\n          'start',\n        ].includes(val)\n      },\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    icon: {\n      type: [Boolean, String, Function, Object] as PropType<false | IconValue>,\n      default: null,\n    },\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String as PropType<ContextualType>,\n      validator: (val: ContextualType) => allowedTypes.includes(val),\n    },\n\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'flat' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const icon = computed(() => {\n      if (props.icon === false) return undefined\n      if (!props.type) return props.icon\n\n      return props.icon ?? `$${props.type}`\n    })\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant,\n    }))\n\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'borderColor'))\n    const { t } = useLocale()\n\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        isActive.value = false\n      },\n    }))\n\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value)\n      const hasTitle = !!(slots.title || props.title)\n      const hasText = !!(props.text || slots.text)\n      const hasClose = !!(slots.close || props.closable)\n\n      return isActive.value && (\n        <props.tag\n          class={[\n            'v-alert',\n            props.border && {\n              'v-alert--border': !!props.border,\n              [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true,\n            },\n            {\n              'v-alert--prominent': props.prominent,\n            },\n            themeClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          role=\"alert\"\n        >\n          { genOverlays(false, 'v-alert') }\n\n          { props.border && (\n            <div\n              key=\"border\"\n              class={[\n                'v-alert__border',\n                textColorClasses.value,\n              ]}\n              style={ textColorStyles.value }\n            />\n          ) }\n\n          { hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VIcon: {\n                  density: props.density,\n                  icon: icon.value,\n                  size: props.prominent ? 44 : 28,\n                },\n              }}\n            >\n              <div class=\"v-alert__prepend\">\n                { slots.prepend\n                  ? slots.prepend()\n                  : icon.value && (<VIcon />)\n                }\n              </div>\n            </VDefaultsProvider>\n          ) }\n\n          <div class=\"v-alert__content\">\n            { hasTitle && (\n              <VAlertTitle key=\"title\">\n                { slots.title ? slots.title() : props.title }\n              </VAlertTitle>\n            ) }\n\n            { hasText && (\n              slots.text ? slots.text() : props.text\n            ) }\n\n            { slots.default?.() }\n          </div>\n\n          { slots.append && (\n            <div key=\"append\" class=\"v-alert__append\">\n              { slots.append() }\n            </div>\n          ) }\n\n          { hasClose && (\n            <VDefaultsProvider\n              key=\"close\"\n              defaults={{\n                VBtn: {\n                  icon: props.closeIcon,\n                  size: 'x-small',\n                  variant: 'text',\n                },\n              }}\n            >\n              <div class=\"v-alert__close\">\n                { slots.close?.({ props: closeProps.value }) ?? <VBtn { ...closeProps.value } /> }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VAlert = InstanceType<typeof VAlert>\n"]},"metadata":{},"sourceType":"module"}