{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\"; // Styles\n\nimport \"./VSystemBar.css\"; // Composables\n\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed, ref, toRef } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nexport const VSystemBar = defineComponent({\n  name: 'VSystemBar',\n  props: {\n    color: String,\n    height: [Number, String],\n    window: Boolean,\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const height = computed(() => {\n      var _props$height;\n\n      return (_props$height = props.height) != null ? _props$height : props.window ? 32 : 24;\n    });\n    const {\n      layoutItemStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: ref('top'),\n      layoutSize: height,\n      elementSize: height,\n      active: computed(() => true),\n      absolute: toRef(props, 'absolute')\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-system-bar', {\n        'v-system-bar--window': props.window\n      }, themeClasses.value, backgroundColorClasses.value, elevationClasses.value, roundedClasses.value],\n      \"style\": [backgroundColorStyles.value, layoutItemStyles.value]\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"0FAAA;;AACA,0B,CAEA;;SACSA,oBAAoBC,oB;SACpBC,qBAAqBC,qB;SACrBC,kBAAkBC,kB;SAClBC,oB;SACAC,gBAAgBC,oB;SAChBC,0B,+BAET;;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,QAAqC,KAArC;SACSC,iBAAiBC,iB;AAE1B,OAAO,MAAMC,UAAU,GAAGF,eAAe,CAAC;EACxCG,IAAI,EAAE,YADkC;EAGxCC,KAAK,EAAE;IACLC,KAAK,EAAEC,MADF;IAELC,MAAM,EAAE,CAACC,MAAD,EAASF,MAAT,CAFH;IAGLG,MAAM,EAAEC,OAHH;IAKL,GAAGvB,kBAAkB,EALhB;IAML,GAAGE,mBAAmB,EANjB;IAOL,GAAGE,gBAAgB,EAPd;IAQL,GAAGE,YAAY,EARV;IASL,GAAGC,cAAc;EATZ,CAHiC;;EAexCiB,KAAK,CAAEP,KAAF,QAAoB;IAAA,IAAX;MAAEQ;IAAF,IAAWC;IACvB,MAAM;MAAEC;IAAF,IAAmBnB,YAAY,CAACS,KAAD,CAArC;IACA,MAAM;MAAEW,sBAAF;MAA0BC;IAA1B,IAAoDpB,kBAAkB,CAACG,KAAK,CAACK,KAAD,EAAQ,OAAR,CAAN,CAA5E;IACA,MAAM;MAAEa;IAAF,IAAuB7B,YAAY,CAACgB,KAAD,CAAzC;IACA,MAAM;MAAEc;IAAF,IAAqB1B,UAAU,CAACY,KAAD,CAArC;IACA,MAAMG,MAAM,GAAGV,QAAQ,CAAC;MAAA;;MAAA,wBAAMO,KAAK,CAACG,MAAZ,4BAAuBH,KAAK,CAACK,MAANL,GAAe,EAAfA,GAAoB,EAA3C;IAAD,EAAvB;IACA,MAAM;MAAEe;IAAF,IAAuB7B,aAAa,CAAC;MACzC8B,EAAE,EAAEhB,KAAK,CAACD,IAD+B;MAEzCkB,KAAK,EAAExB,QAAQ,CAAC,MAAMyB,QAAQ,CAAClB,KAAK,CAACiB,KAAP,EAAc,EAAd,CAAf,CAF0B;MAGzCE,QAAQ,EAAEzB,GAAG,CAAC,KAAD,CAH4B;MAIzC0B,UAAU,EAAEjB,MAJ6B;MAKzCkB,WAAW,EAAElB,MAL4B;MAMzCmB,MAAM,EAAE7B,QAAQ,CAAC,MAAM,IAAP,CANyB;MAOzC8B,QAAQ,EAAE5B,KAAK,CAACK,KAAD,EAAQ,UAAR;IAP0B,CAAD,CAA1C;IAUAH,SAAS,CAAC;MAAA,SAEC,CACL,cADK,EAEL;QAAE,wBAAwBG,KAAK,CAACK;MAAhC,CAFK,EAGLK,YAAY,CAACc,KAHR,EAILb,sBAAsB,CAACa,KAJlB,EAKLX,gBAAgB,CAACW,KALZ,EAMLV,cAAc,CAACU,KANV,CAFD;MAAA,SAUC,CACLZ,qBAAqB,CAACY,KADjB,EAELT,gBAAgB,CAACS,KAFZ;IAVD,GAcIhB,KAdJ,CAAD,CAATX;IAkBA,OAAO,EAAP;EACD;;AAlDuC,CAAD,CAAlC","names":["makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useBackgroundColor","computed","ref","toRef","defineComponent","useRender","VSystemBar","name","props","color","String","height","Number","window","Boolean","setup","slots","_ref","themeClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","roundedClasses","layoutItemStyles","id","order","parseInt","position","layoutSize","elementSize","active","absolute","value"],"sources":["../../../src/components/VSystemBar/VSystemBar.tsx"],"sourcesContent":["// Styles\nimport './VSystemBar.sass'\n\n// Composables\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VSystemBar = defineComponent({\n  name: 'VSystemBar',\n\n  props: {\n    color: String,\n    height: [Number, String],\n    window: Boolean,\n\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const height = computed(() => props.height ?? (props.window ? 32 : 24))\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: ref('top'),\n      layoutSize: height,\n      elementSize: height,\n      active: computed(() => true),\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-system-bar',\n          { 'v-system-bar--window': props.window },\n          themeClasses.value,\n          backgroundColorClasses.value,\n          elevationClasses.value,\n          roundedClasses.value,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          layoutItemStyles.value,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n"]},"metadata":{},"sourceType":"module"}