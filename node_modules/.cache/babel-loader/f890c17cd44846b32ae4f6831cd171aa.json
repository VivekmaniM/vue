{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VNavigationDrawer.css\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useDisplay } from \"../../composables/display.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRouter } from \"../../composables/router.mjs\";\nimport { useRtl } from \"../../composables/index.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { useSticky } from \"./sticky.mjs\";\nimport { useTouch } from \"./touch.mjs\"; // Utilities\n\nimport { computed, onBeforeMount, ref, toRef, Transition, watch } from 'vue';\nimport { convertToUnit, defineComponent, toPhysical, useRender } from \"../../util/index.mjs\"; // Types\n\nconst locations = ['start', 'end', 'left', 'right', 'bottom'];\nexport const VNavigationDrawer = defineComponent({\n  name: 'VNavigationDrawer',\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: null\n    },\n    permanent: Boolean,\n    rail: Boolean,\n    railWidth: {\n      type: [Number, String],\n      default: 56\n    },\n    scrim: {\n      type: [String, Boolean],\n      default: true\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256\n    },\n    location: {\n      type: String,\n      default: 'start',\n      validator: value => locations.includes(value)\n    },\n    sticky: Boolean,\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({\n      tag: 'nav'\n    }),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      mobile\n    } = useDisplay();\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const router = useRouter();\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v);\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const rootEl = ref();\n    const isHovering = ref(false);\n    const width = computed(() => {\n      return props.rail && props.expandOnHover && isHovering.value ? Number(props.width) : Number(props.rail ? props.railWidth : props.width);\n    });\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value);\n    });\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary));\n    const isSticky = computed(() => props.sticky && !isTemporary.value && location.value !== 'bottom');\n\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && (isActive.value = !val));\n    }\n\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false));\n    }\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true;\n    });\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return;\n      isActive.value = props.permanent || !mobile.value;\n    });\n    const {\n      isDragging,\n      dragProgress,\n      dragStyles\n    } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location\n    });\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0 : props.rail && props.expandOnHover ? Number(props.railWidth) : width.value;\n      return isDragging.value ? size * dragProgress.value : size;\n    });\n    const {\n      layoutItemStyles,\n      layoutRect,\n      layoutItemScrimStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() => // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      props.absolute || isSticky.value && typeof isStuck.value !== 'string')\n    });\n    const {\n      isStuck,\n      stickyStyles\n    } = useSticky({\n      rootEl,\n      isSticky,\n      layoutItemStyles\n    });\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    const scrimStyles = computed(() => ({ ...(isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none'\n      } : undefined),\n      ...(layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom)\n      } : undefined),\n      ...layoutItemScrimStyles.value\n    }));\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent'\n      }\n    });\n    useRender(() => {\n      var _slots$image, _slots$prepend, _slots$default, _slots$append;\n\n      const hasImage = slots.image || props.image;\n      return _createVNode(_Fragment, null, [_createVNode(props.tag, _mergeProps({\n        \"ref\": rootEl,\n        \"onMouseenter\": () => isHovering.value = true,\n        \"onMouseleave\": () => isHovering.value = false,\n        \"class\": ['v-navigation-drawer', `v-navigation-drawer--${location.value}`, {\n          'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n          'v-navigation-drawer--floating': props.floating,\n          'v-navigation-drawer--is-hovering': isHovering.value,\n          'v-navigation-drawer--rail': props.rail,\n          'v-navigation-drawer--temporary': isTemporary.value,\n          'v-navigation-drawer--active': isActive.value,\n          'v-navigation-drawer--sticky': isSticky.value\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value],\n        \"style\": [backgroundColorStyles.value, layoutItemStyles.value, dragStyles.value, ssrBootStyles.value, stickyStyles.value]\n      }, attrs), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-navigation-drawer__img\"\n        }, [slots.image ? (_slots$image = slots.image) == null ? void 0 : _slots$image.call(slots, {\n          image: props.image\n        }) : _createVNode(\"img\", {\n          \"src\": props.image,\n          \"alt\": \"\"\n        }, null)]), slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__prepend\"\n        }, [(_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots)]), _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__content\"\n        }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)]), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__append\"\n        }, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots)])]\n      }), _createVNode(Transition, {\n        \"name\": \"fade-transition\"\n      }, {\n        default: () => [isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && _createVNode(\"div\", {\n          \"class\": ['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value],\n          \"style\": [scrimStyles.value, scrimColor.backgroundColorStyles.value],\n          \"onClick\": () => isActive.value = false\n        }, null)]\n      })]);\n    });\n    return {\n      isStuck\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeBorderProps","useBorder","makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useBackgroundColor","useDisplay","useProxiedModel","useRouter","useRtl","useSsrBoot","useSticky","useTouch","computed","onBeforeMount","ref","toRef","Transition","watch","convertToUnit","defineComponent","toPhysical","useRender","locations","VNavigationDrawer","name","props","color","String","disableResizeWatcher","Boolean","disableRouteWatcher","expandOnHover","floating","modelValue","type","default","permanent","rail","railWidth","Number","scrim","image","temporary","touchless","width","location","validator","value","includes","sticky","tag","emits","val","setup","attrs","slots","_ref","isRtl","themeClasses","borderClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","mobile","roundedClasses","router","isActive","v","ssrBootStyles","rootEl","isHovering","isTemporary","isSticky","currentRoute","isDragging","dragProgress","dragStyles","position","layoutSize","size","layoutItemStyles","layoutRect","layoutItemScrimStyles","id","order","parseInt","elementSize","active","disableTransitions","absolute","isStuck","stickyStyles","scrimColor","scrimStyles","opacity","transition","undefined","left","right","top","bottom","VList","bgColor","hasImage","_slots$image","prepend","_slots$prepend","_slots$default","append","_slots$append"],"sources":["../../../src/components/VNavigationDrawer/VNavigationDrawer.tsx"],"sourcesContent":["// Styles\nimport './VNavigationDrawer.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useDisplay } from '@/composables/display'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRouter } from '@/composables/router'\nimport { useRtl } from '@/composables'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { useSticky } from './sticky'\nimport { useTouch } from './touch'\n\n// Utilities\nimport { computed, onBeforeMount, ref, toRef, Transition, watch } from 'vue'\nimport { convertToUnit, defineComponent, toPhysical, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst locations = ['start', 'end', 'left', 'right', 'bottom'] as const\n\nexport const VNavigationDrawer = defineComponent({\n  name: 'VNavigationDrawer',\n\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    permanent: Boolean,\n    rail: Boolean,\n    railWidth: {\n      type: [Number, String],\n      default: 56,\n    },\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    location: {\n      type: String as PropType<typeof locations[number]>,\n      default: 'start',\n      validator: (value: any) => locations.includes(value),\n    },\n    sticky: Boolean,\n\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'nav' }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { mobile } = useDisplay()\n    const { roundedClasses } = useRounded(props)\n    const router = useRouter()\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v)\n    const { ssrBootStyles } = useSsrBoot()\n\n    const rootEl = ref<HTMLElement>()\n    const isHovering = ref(false)\n\n    const width = computed(() => {\n      return (props.rail && props.expandOnHover && isHovering.value)\n        ? Number(props.width)\n        : Number(props.rail ? props.railWidth : props.width)\n    })\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value) as 'left' | 'right' | 'bottom'\n    })\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary))\n    const isSticky = computed(() =>\n      props.sticky &&\n      !isTemporary.value &&\n      location.value !== 'bottom'\n    )\n\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && (isActive.value = !val))\n    }\n\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false))\n    }\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true\n    })\n\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return\n\n      isActive.value = props.permanent || !mobile.value\n    })\n\n    const { isDragging, dragProgress, dragStyles } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location,\n    })\n\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0\n        : props.rail && props.expandOnHover ? Number(props.railWidth)\n        : width.value\n\n      return isDragging.value ? size * dragProgress.value : size\n    })\n\n    const { layoutItemStyles, layoutRect, layoutItemScrimStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() =>\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        props.absolute || (isSticky.value && typeof isStuck.value !== 'string')\n      ),\n    })\n\n    const { isStuck, stickyStyles } = useSticky({ rootEl, isSticky, layoutItemStyles })\n\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const scrimStyles = computed(() => ({\n      ...isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none',\n      } : undefined,\n      ...layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom),\n      } : undefined,\n      ...layoutItemScrimStyles.value,\n    }))\n\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent',\n      },\n    })\n\n    useRender(() => {\n      const hasImage = (slots.image || props.image)\n\n      return (\n        <>\n          <props.tag\n            ref={ rootEl }\n            onMouseenter={ () => (isHovering.value = true) }\n            onMouseleave={ () => (isHovering.value = false) }\n            class={[\n              'v-navigation-drawer',\n              `v-navigation-drawer--${location.value}`,\n              {\n                'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n                'v-navigation-drawer--floating': props.floating,\n                'v-navigation-drawer--is-hovering': isHovering.value,\n                'v-navigation-drawer--rail': props.rail,\n                'v-navigation-drawer--temporary': isTemporary.value,\n                'v-navigation-drawer--active': isActive.value,\n                'v-navigation-drawer--sticky': isSticky.value,\n              },\n              themeClasses.value,\n              backgroundColorClasses.value,\n              borderClasses.value,\n              elevationClasses.value,\n              roundedClasses.value,\n            ]}\n            style={[\n              backgroundColorStyles.value,\n              layoutItemStyles.value,\n              dragStyles.value,\n              ssrBootStyles.value,\n              stickyStyles.value,\n            ]}\n            { ...attrs }\n          >\n            { hasImage && (\n              <div key=\"image\" class=\"v-navigation-drawer__img\">\n                { slots.image\n                  ? slots.image?.({ image: props.image })\n                  : (<img src={ props.image } alt=\"\" />)\n                }\n              </div>\n            )}\n\n            { slots.prepend && (\n              <div class=\"v-navigation-drawer__prepend\">\n                { slots.prepend?.() }\n              </div>\n            )}\n\n            <div class=\"v-navigation-drawer__content\">\n              { slots.default?.() }\n            </div>\n\n            { slots.append && (\n              <div class=\"v-navigation-drawer__append\">\n                { slots.append?.() }\n              </div>\n            )}\n          </props.tag>\n\n          <Transition name=\"fade-transition\">\n            { isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && (\n              <div\n                class={['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value]}\n                style={[scrimStyles.value, scrimColor.backgroundColorStyles.value]}\n                onClick={ () => isActive.value = false }\n              />\n            )}\n          </Transition>\n        </>\n      )\n    })\n\n    return {\n      isStuck,\n    }\n  },\n})\n\nexport type VNavigationDrawer = InstanceType<typeof VNavigationDrawer>\n"]},"metadata":{},"sourceType":"module"}